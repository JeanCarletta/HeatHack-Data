name: deploy-book

on:
  push:
    branches:
    - main
  schedule:
    - cron: '14 1/4 * * *'
  

jobs:

  updateData:
    runs-on: ubuntu-latest
    steps:
    - name: get ThingSpeak data # run the run.py to get the latest data
      run: |
           python3 ThingSpeakAPI.py
    
    - name: commit changes
      run: |
            git add -A
            ls -la
    - name: push changes
      run: |
           git commit -m "updating thingspeak data $(date +"%D %T")"
           git push

## This could be much simpler now and we intend to reinstate, but need to understand the
## security of allowing access to the Google Drive.
#   addEmailedData:
#     # Download 'data' folder from Google Drive
#     - name: retrieve emailed data
#       run: |
#             mkdir -p data
# #         python3 downloadDrive.py
            
# # # mv -f input data/input
# # # mv -f output data/output
# # # mv -f processed data/processed

# #     # Process the data for duplicates etc
# #     - name: Process Data
# #       run: |
# #         python3 process_data.py data

# #     - name: Upload Processed Files
# #     # Upload processed files
# #       run: |
# #         python3 uploadDrive.py data

  build:
# This job installs dependencies, builds the book, and pushes it to `gh-pages`
    runs-on: ubuntu-latest
    needs: updateData
    steps:
    - uses: actions/checkout@v4 #@v2

    # Install dependencies
    - name: Set up Python 
      uses: actions/setup-python@v5 #@v2
      with:
        python-version: '3.10' #3.8

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    #- name: install dependencies
    #  run: |
    #      pip install requests pandas datetime ipywidgets plotly IPython

    # Build the book
    ## be careful or add in jupyter-book clean . to get a build
    ## when only the data has changed.
    - name: Build the book
      run: |
        jupyter-book clean .
        jupyter-book build .

# Upload the book's HTML as an artifact
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: "_build/html"

  # Deployment job
  deploy:
    permissions:
      id-token: write
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  ## old version - maybe we needed this for the ThingSpeak action, but I think
  ## probably it's just an alternative method.
  # deploy-book:
  #   runs-on: ubuntu-latest
  #   env:
  #     TYPE: ${{ secrets.TYPE }}
  #     PID: ${{ secrets.PID }}
  #     PKID: ${{ secrets.PKID }}
  #     PK: ${{ secrets.PK }}
  #     CE: ${{ secrets.CE }}
  #     CID: ${{ secrets.CID }}
  #     AURI: ${{ secrets.AURI }}
  #     TURI: ${{ secrets.TURI }}
  #     AUTHP: ${{ secrets.AUTHP }}
  #     CLIURL: ${{ secrets.CLIURL }}
  #   steps:
  #   - uses: actions/checkout@v4 #@v2
  #   - name: Set the git credentials
  #     run: |
  #            git config --global user.name "GithubActionRunner"
  #            git config --global user.email "githubactionrunner"
  #   # Install dependencies
  #   - name: Set up Python
  #     uses: actions/setup-python@v5 #@v2
  #     with:
  #       python-version: '3.10' #3.8

  #   - name: Install dependencies
  #     run: |
  #       pip install -r requirements.txt
  #   #- name: install dependencies
  #     #run: |
  #         #pip install requests pandas datetime ipywidgets plotly IPython
    

              

## pre-standard version
    # # Build the book
    # - name: Build the book
    #   run: |
    #     jupyter-book clean .
    #     jupyter-book build . --builder html
    
    # # Build Pdf via html
    # # - name: Build the pdf via HTML
    # #   run: |
    # #     jupyter-book build ./ --builder pdfhtml
    # #     mv ./_build/pdf/book.pdf ./_build/html/book-via-html.pdf
    
    # # Build Pdf via latex
    # #- name: Build the pdf via latex
    # #  run: |
    # #    sudo apt-get update
    # #    sudo apt-get install texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended texlive-fonts-extra texlive-xetex latexmk
    # #    jupyter-book build ./ --builder pdflatex
    # #    mv ./_build/latex/book.pdf ./_build/html/book-via-latex.pdf
        
    # - name: Move Processed data to public folder
    #   run: |
    #     mv data ./_build/html/
    # # Push the book's HTML to github-pages
    # - name: GitHub Pages action
    #   uses: peaceiris/actions-gh-pages@v3.6.1
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./_build/html
