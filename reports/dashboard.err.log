Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

# Imports 

import pandas as pd


# Get the possible data venues
venuekeysfile = "venue-keys.csv"
dfVenueKeys = pd.read_csv(venuekeysfile)

dfDash = pd.DataFrame(columns = ["Venue","first_timestamp","last_timestamp","days_captured"])


#print("%s\t%s\t%s\t%s" % ("Venue","first timestamp","last timestamp","days captured"))


for index, venueSensorDetails in dfVenueKeys.iterrows():
    
    sensorMacOfSelection = venueSensorDetails['sensor_MAC']
    venueOfSelection = str(venueSensorDetails['venue_id'])
    dfTempDataSet = pd.read_csv('deviceData/'+ "venue_" + venueOfSelection + "_with_device_" + sensorMacOfSelection + '.csv' )
    dfTempDataSet['timestamp'] = pd.to_datetime(dfTempDataSet['timestamp'])
    dfTempDataSet['venue_id'] = venueSensorDetails['venue_id']
    dfTempDataSet = dfTempDataSet[(dfTempDataSet.temperature <= 100)]
    dfTempDataSet = dfTempDataSet[(dfTempDataSet.temperature > -10)] # eliminate rogue data
    #print("%s\t%s\t%s\t%d" %
    #    (venueOfSelection, dfTempDataSet.timestamp.min().strftime('%Y-%m-%d %H:%M'), dfTempDataSet.timestamp.max().strftime('%Y-%m-%d %H:%M'), len(dfTempDataSet.timestamp)/288))
    dfDash.loc[len(dfDash)] = ([venueOfSelection, dfTempDataSet.timestamp.min().strftime('%Y-%m-%d %H:%M'), dfTempDataSet.timestamp.max().strftime('%Y-%m-%d %H:%M'), round(len(dfTempDataSet.timestamp)/288)])


------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[1], line 27[0m
[1;32m     24[0m dfTempDataSet [38;5;241m=[39m dfTempDataSet[(dfTempDataSet[38;5;241m.[39mtemperature [38;5;241m>[39m [38;5;241m-[39m[38;5;241m10[39m)] [38;5;66;03m# eliminate rogue data[39;00m
[1;32m     25[0m [38;5;66;03m#print("%s\t%s\t%s\t%d" %[39;00m
[1;32m     26[0m [38;5;66;03m#    (venueOfSelection, dfTempDataSet.timestamp.min().strftime('%Y-%m-%d %H:%M'), dfTempDataSet.timestamp.max().strftime('%Y-%m-%d %H:%M'), len(dfTempDataSet.timestamp)/288))[39;00m
[0;32m---> 27[0m dfDash[38;5;241m.[39mloc[[38;5;28mlen[39m(dfDash)] [38;5;241m=[39m ([venueOfSelection, [43mdfTempDataSet[49m[38;5;241;43m.[39;49m[43mtimestamp[49m[38;5;241;43m.[39;49m[43mmin[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mstrftime[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43m%[39;49m[38;5;124;43mY-[39;49m[38;5;124;43m%[39;49m[38;5;124;43mm-[39;49m[38;5;132;43;01m%d[39;49;00m[38;5;124;43m [39;49m[38;5;124;43m%[39;49m[38;5;124;43mH:[39;49m[38;5;124;43m%[39;49m[38;5;124;43mM[39;49m[38;5;124;43m'[39;49m[43m)[49m, dfTempDataSet[38;5;241m.[39mtimestamp[38;5;241m.[39mmax()[38;5;241m.[39mstrftime([38;5;124m'[39m[38;5;124m%[39m[38;5;124mY-[39m[38;5;124m%[39m[38;5;124mm-[39m[38;5;132;01m%d[39;00m[38;5;124m [39m[38;5;124m%[39m[38;5;124mH:[39m[38;5;124m%[39m[38;5;124mM[39m[38;5;124m'[39m), [38;5;28mround[39m([38;5;28mlen[39m(dfTempDataSet[38;5;241m.[39mtimestamp)[38;5;241m/[39m[38;5;241m288[39m)])

File [0;32m/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/pandas/_libs/tslibs/nattype.pyx:67[0m, in [0;36mpandas._libs.tslibs.nattype._make_error_func.f[0;34m()[0m

[0;31mValueError[0m: NaTType does not support strftime
ValueError: NaTType does not support strftime

